name: Build and Deploy Strapi to EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE: siddocker467/strapi-app:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Set up Docker auth
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🏗️ Build Docker image
        run: docker build -t $DOCKER_IMAGE .

      - name: 📤 Push to Docker Hub
        run: docker push $DOCKER_IMAGE

      - name: 🧰 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.6"

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 📝 Create terraform.tfvars from secrets
        run: |
          cd terraform
          cat > terraform.tfvars << EOF
          aws_region    = "${{ secrets.AWS_REGION }}"
          ami_id        = "${{ secrets.AWS_AMI_ID }}"
          instance_type = "${{ secrets.AWS_INSTANCE_TYPE }}"
          key_name      = "${{ secrets.AWS_KEY_NAME }}"
          vpc_id        = "${{ secrets.AWS_VPC_ID }}"
          EOF

      - name: 📁 Setup Terraform working directory
        run: |
          cd terraform
          terraform init

      - name: 📋 Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: 🚀 Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: ✅ Deployment Status
        run: |
          echo "✅ Deployment completed successfully!"
          echo "Docker image: ${{ env.DOCKER_IMAGE }}"
          echo "EC2 instance should be running with the new image" 